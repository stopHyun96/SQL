-- JOIN - 연결
-- 두개 이상의 테이블을 서로 연결하는 방식 -> 조인
-- 내부 조인, 외부 조인
-- 내부 조인 -> 서로 연결된 테이블에서 교차된 데이터만 검색
-- people.keycode = student.people

select * from people, student
where people.keycode = student.people;

-- 내부 조인 ANSI 방식
select * from people inner join student on people.keycode = student.people;

select * from student, employee where student.people = employee.people;
select * from student inner join employee using(people);

select * from people
inner join student
on people.keycode = student.people
inner join univercity
on univercity.keycode = student.univercity;

select * from student inner join employee using(people)
inner join academy_student using(people);

select * from people;
-- academy_student -> 학원생
-- 알바를 하는 학원생의 이름 전체 검색
select people.name from 
employee inner join people 
on employee.people = people.keycode
inner join academy_student 
on academy_student.people = employee.people;

-- 학교를 다니는 알바생의 시급 평균
select avg(wage) from 
student inner join employee 
using(people);

-- 학원을 다니는 학생의 나이 평균
select
avg(2022 - (to_number(substr(registnumber,1,2)) +
case
    when substr(registnumber,8,1) in ('1','2','5','6')
    then 1900
    when substr(registnumber,8,1) in ('3','4','7','8')
    then 2000
    else 1800
end)) as age_avg
from
academy_student inner join student
on academy_student.people = student.people
inner join people
on student.people = people.keycode;

-- 외부 조인
-- 서로 교차되지 않은 데이터도 검색하는 기능
-- 왼쪽 외부조인, 오른쪽 외부조인, 전체 외부조인

-- 왼쪽 외부조인
select * from student, people
where people.keycode(+) = student.people;

-- 오른쪽 외부조인
select * from student, people
where people.keycode = student.people(+);

-- 외부 조인 ANSI 방식(전체 외부조인은 ANSI방식으로만 가능)
select * from student left outer join people
on people.keycode = student.people;

select * from student right outer join people
on people.keycode = student.people;

select * from student full outer join people
on people.keycode = student.people;

select * from student left outer join employee
using(people);

select * from student right outer join employee
using(people);

-- 학생 데이터 전체 검색 - 학생이 알바 중이라면 알바 직업도 검색
select * from student full outer join employee
using(people);

-- 학생별 아르바이트 정보 검색
select people.name, alba.name from student full outer join employee
on student.people = employee.people
full outer join alba
on employee.alba = alba.keycode
full outer join people
on student.people = people.keycode;

select * from
student inner join employee
on student.people = employee.people
full outer join academy_student
on employee.people = academy_student.people;

-- 알바를 안하는 학생이거나 알바를 하는 학원생
select employee.people from student left outer join employee on student.people = employee.people where alba is null
union
select employee.people from academy_student inner join employee on academy_student.people = employee.people;
-- 알바를 하는 학생의 평균 점수
select avg(score) from student inner join employee
using(people);
-- 알바를 안하고 학원을 안다니는 학생의 평균 점수
select avg(score)
from student, employee, academy_student
where student.people = employee.people(+) and
student.people = academy_student.people(+) and
academy_student.people is null and employee.people is null;

select * from employee;
-- 학원생 나이 평균
    --내가 한거
select avg(2022 - (to_number(substr(people.registnumber,1,2)) +
case
    when substr(people.registnumber,8,1) in ('1','2','5','6')
    then 1900
    when substr(people.registnumber,8,1) in ('3','4','7','8')
    then 2000
    else 1800
end)) as age_avg
from people inner join academy_student on people.keycode = academy_student.people;
    --샘이 한거
select
avg(2022 - (to_number(substr(registnumber,1,2)) +
case to_number(substr(registnumber,8,1))
    when 1 then 1900 when 2 then 1900 when 5 then 1900 when 6 then 1900
    when 3 then 2000 when 4 then 2000 when 7 then 2000 when 8 then 2000
    else 1800
end)) as age_avg
from people, academy_student
where people.keycode = academy_student.people;

-- 알바생 남성 인원 수
    --내가 한거
select count(keycode) as male_count from people inner join employee on people.keycode = employee.people
where (to_number(substr(registnumber, 8, 1)) in (1,3,5,7,9));
    --샘이 한거
select count(keycode) from people, employee
where people.keycode = employee.people and
mod(to_number(substr(registnumber, 8, 1)),2) = 1;

-- 알바생 여성 인원 수
    --내가 한거
select count(keycode) as female_count from people inner join employee on people.keycode = employee.people
where (to_number(substr(registnumber, 8, 1)) in (2,4,6,8,0));
    --샘이 한거
select count(keycode) from people, employee
where people.keycode = employee.people and
mod(to_number(substr(registnumber, 8, 1)),2) = 0;

-- 알바 직종별 시급 평균
    --내가 한거
select alba.name, avg(wage) as wage_avg from alba inner join employee on alba.keycode = employee.alba
group by alba.name;
    --샘이 한거
select avg(wage) from employee group by alba;